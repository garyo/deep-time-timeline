---
export interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body>
    <div class="app-container">
      <!-- Menu Bar -->
      <header class="menu-bar">
        <div class="menu-left">
          <button
            class="hamburger-menu"
            id="hamburger-menu"
            aria-label="Toggle menu"
          >
            <span></span>
            <span></span>
            <span></span>
          </button>
          <h1>Deep-Time Timeline Visualization</h1>
        </div>
        <nav>
          <button id="zoom-in" class="nav-button">Zoom In</button>
          <button id="zoom-out" class="nav-button">Zoom Out</button>
          <button id="reset-view" class="nav-button">Reset View</button>
          <button
            id="about-button"
            class="nav-button about-button"
            aria-label="About">?</button
          >
        </nav>
      </header>

      <div class="content-wrapper">
        <!-- Left Sidebar -->
        <aside class="sidebar" id="sidebar">
          <div class="sidebar-content">
            <h2>Time Presets</h2>
            <ul class="preset-list">
              <li>
                <button class="preset-button" data-years="100">100 years</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="1000"
                  >1,000 years</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="10000"
                  >10,000 years</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="100000"
                  >100,000 years</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="1000000"
                  >1 million years</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="4540000000"
                  >Age of Earth</button
                >
              </li>
              <li>
                <button class="preset-button" data-years="13800000000"
                  >Age of Universe</button
                >
              </li>
            </ul>
          </div>

          <div class="sidebar-footer">
            By <a
              href="https://oberbrunner.com"
              target="_blank"
              rel="noopener noreferrer">Gary Oberbrunner</a
            >
          </div>
        </aside>

        <!-- Mobile overlay for sidebar -->
        <div class="sidebar-overlay" id="sidebar-overlay"></div>

        <!-- Help/About popup -->
        <div id="about-popup" class="about-popup">
          <div class="about-popup-content">
            <button
              id="close-about"
              class="close-about"
              aria-label="Close about">&times;</button
            >
            <div class="about-content">
              <h2>About This App</h2>
              <!-- About content will go here -->
              <p>
                This app is based on a paper log-scale geologic timeline I
                created with a friend in junior high school in the 1970s, on an
                adding-machine tape. We took the logarithms of the dates of all
                kinds of paleological events, plotted them on the 40' long tape,
                and hung it up in the classroom. We realized we could fit the
                Big Bang, dinosaurs, and what we ate for breakfast that day on
                the same scale! I still have that tape somewhere, and I've been
                wanting to create an interactive version for many many years.
              </p>
              <p>
                The idea of a <a
                  href="https://en.wikipedia.org/wiki/Logarithm"
                  target="_blank">log-scaled</a
                >
                timeline is that ancient events are compressed, and recent events
                take up more space. We humans are naturally oriented toward short-term
                thinking: tomorrow, next week, a human lifetime. This app puts that
                in context, so you can see how the present smoothly fades into the
                very deepest past.
              </p>
              <p>
                With this app you can zoom in on any time period in the history
                of the universe. Significant events from politics, art, science,
                and nature fade in as you zoom into them. It also has a "news
                feed" so new events will populate in on the right edge every now
                and then.
              </p>
              <p>
                For more on Deep Time thinking, check out
                <a href="https://longnowboston.org" target="_blank"
                  >Long Now Boston</a
                >, a group I work with to promote long-term thinking about some
                of the biggest problems and ideas.
              </p>
              <p>
                Of course any collection of historical events will be
                opinionated; I chose this set, and their significances, based on
                my own preferences. Since this is a completely open-source app
                under an MIT license, you are welcome to
                <a
                  href="https://github.com/garyo/deep-time-timeline"
                  target="_blank">inspect the data and code</a
                >
                and even make your own version.
              </p>
              <p style="font-size: 0.8rem; margin-top: 20px">
                Created by Gary Oberbrunner, (c) 2025
              </p>
            </div>
          </div>
        </div>

        <!-- Main Content Area -->
        <main class="main-content">
          <slot />
        </main>
      </div>
    </div>
  </body>
</html>

<script>
  // Hamburger menu functionality
  function initHamburgerMenu() {
    const hamburgerMenu = document.getElementById('hamburger-menu')
    const sidebar = document.getElementById('sidebar')
    const sidebarOverlay = document.getElementById('sidebar-overlay')

    if (!hamburgerMenu || !sidebar || !sidebarOverlay) {
      return
    }

    function toggleSidebar() {
      const isOpen = sidebar.classList.contains('open')

      if (isOpen) {
        closeSidebar()
      } else {
        openSidebar()
      }
    }

    function openSidebar() {
      sidebar.classList.add('open')
      sidebarOverlay.classList.add('show')
      hamburgerMenu.classList.add('active')
      document.body.style.overflow = 'hidden' // Prevent background scrolling
    }

    function closeSidebar() {
      sidebar.classList.remove('open')
      sidebarOverlay.classList.remove('show')
      hamburgerMenu.classList.remove('active')
      document.body.style.overflow = '' // Restore scrolling
    }

    // Event listeners
    hamburgerMenu.addEventListener('click', toggleSidebar)
    sidebarOverlay.addEventListener('click', closeSidebar)

    // Close sidebar when clicking a preset button on mobile
    const presetButtons = sidebar.querySelectorAll('.preset-button')
    presetButtons.forEach((button) => {
      button.addEventListener('click', () => {
        if (window.innerWidth <= 768) {
          closeSidebar()
        }
      })
    })

    // Handle window resize
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) {
        closeSidebar()
      }
    })

    // Handle escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && sidebar.classList.contains('open')) {
        closeSidebar()
      }
    })
  }

  // About popup functionality
  function initAboutPopup() {
    const aboutButton = document.getElementById('about-button')
    const aboutPopup = document.getElementById('about-popup')
    const closeAbout = document.getElementById('close-about')

    if (!aboutButton || !aboutPopup || !closeAbout) {
      return
    }

    function openAboutPopup() {
      aboutPopup.classList.add('show')
      document.body.style.overflow = 'hidden' // Prevent background scrolling
    }

    function closeAboutPopup() {
      aboutPopup.classList.remove('show')
      document.body.style.overflow = '' // Restore scrolling
    }

    // Event listeners
    aboutButton.addEventListener('click', openAboutPopup)
    closeAbout.addEventListener('click', closeAboutPopup)

    // Close on click outside content
    aboutPopup.addEventListener('click', (e) => {
      if (e.target === aboutPopup) {
        closeAboutPopup()
      }
    })

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && aboutPopup.classList.contains('show')) {
        closeAboutPopup()
      }
    })
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initHamburgerMenu()
      initAboutPopup()
    })
  } else {
    initHamburgerMenu()
    initAboutPopup()
  }
</script>

<style>
  :root {
    --header-height: 60px;
    --sidebar-width: 250px;
    --background: #1a1a1a;
    --surface: #2a2a2a;
    --text: #e0e0e0;
    --text-secondary: #b0b0b0;
    --accent: #4a9eff;
    --accent-hover: #3a8eef;
    --border: #3a3a3a;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    font-family:
      system-ui,
      -apple-system,
      sans-serif;
    background-color: var(--background);
    color: var(--text);
    overflow: hidden;
  }

  .app-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
  }

  .menu-bar {
    height: var(--header-height);
    background-color: var(--surface);
    border-bottom: 1px solid var(--border);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
    position: relative;
    z-index: 1001;
  }

  .menu-left {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .hamburger-menu {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 24px;
    height: 24px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1002;
  }

  .hamburger-menu span {
    width: 24px;
    height: 3px;
    background: var(--text);
    border-radius: 2px;
    transition: all 0.3s linear;
    position: relative;
    transform-origin: 1px;
  }

  .hamburger-menu.active span:first-child {
    transform: rotate(45deg);
  }

  .hamburger-menu.active span:nth-child(2) {
    opacity: 0;
    transform: translateX(20px);
  }

  .hamburger-menu.active span:third-child {
    transform: rotate(-45deg);
  }

  .menu-bar h1 {
    font-size: 1.5rem;
    font-weight: 600;
  }

  .menu-bar nav {
    display: flex;
    gap: 10px;
  }

  .nav-button {
    background-color: var(--accent);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.2s;
  }

  .nav-button:hover {
    background-color: var(--accent-hover);
  }

  .about-button {
    border-radius: 50%;
    width: 30px;
    height: 30px;
    padding: 0;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .about-popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 2000;
    align-items: center;
    justify-content: center;
  }

  .about-popup.show {
    display: flex;
  }

  .about-popup-content {
    background-color: var(--surface);
    border-radius: 8px;
    width: 80%;
    max-width: 700px;
    max-height: 80vh;
    position: relative;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .close-about {
    position: absolute;
    top: 10px;
    right: 15px;
    background: transparent;
    border: none;
    color: var(--text);
    font-size: 24px;
    cursor: pointer;
    z-index: 1;
  }

  .about-content {
    padding: 25px;
    overflow-y: auto;
    max-height: 80vh;
    font-size: 0.9rem;
    line-height: 1.5;
  }

  .about-content h2 {
    margin-bottom: 15px;
    color: var(--accent);
  }

  .about-content a {
    color: var(--link);
  }
  .about-content p {
    margin-bottom: 8px;
  }

  .content-wrapper {
    display: flex;
    flex: 1;
    overflow: hidden;
  }

  .sidebar {
    width: var(--sidebar-width);
    background-color: var(--surface);
    border-right: 1px solid var(--border);
    padding: 0;
    overflow-y: auto;
    transition: transform 0.3s ease-in-out;
    z-index: 1000;
    display: flex;
    flex-direction: column;
  }

  .sidebar-content {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
  }

  .sidebar-footer {
    padding: 15px 20px;
    border-top: 1px solid var(--border);
    background-color: var(--surface);
    font-size: 0.8rem;
    text-align: center;
  }

  .sidebar-footer a {
    color: var(--text-secondary);
    text-decoration: none;
    transition: color 0.2s;
  }

  .sidebar-footer a:hover {
    color: var(--accent);
  }

  .sidebar-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
  }

  .sidebar h2 {
    font-size: 1.2rem;
    margin-bottom: 10px;
    color: var(--text);
  }

  .preset-list,
  .event-list {
    list-style: none;
    margin-bottom: 30px;
  }

  .preset-list li {
    margin-bottom: 5px;
  }

  .preset-button {
    width: 100%;
    background-color: transparent;
    color: var(--text);
    border: 1px solid var(--border);
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    text-align: left;
    transition: all 0.2s;
  }

  .preset-button:hover {
    background-color: var(--accent);
    border-color: var(--accent);
  }

  .event-list li {
    font-size: 0.9rem;
    color: var(--text-secondary);
    margin-bottom: 8px;
    padding-left: 10px;
    border-left: 2px solid var(--border);
  }

  .main-content {
    flex: 1;
    padding: 20px;
    overflow: hidden;
    background-color: var(--background);
    display: flex;
    flex-direction: column;
  }

  /* Mobile Styles */
  @media (max-width: 768px) {
    .hamburger-menu {
      display: flex;
    }

    .sidebar {
      position: fixed;
      top: var(--header-height);
      left: 0;
      height: calc(100vh - var(--header-height));
      transform: translateX(-100%);
      box-shadow: 2px 0 10px rgba(0, 0, 0, 0.3);
    }

    .sidebar.open {
      transform: translateX(0);
    }

    .sidebar-overlay.show {
      display: block;
    }

    .content-wrapper {
      width: 100%;
    }

    .main-content {
      width: 100%;
      padding: 15px;
    }

    .menu-bar {
      padding: 0 15px;
    }

    .menu-bar h1 {
      font-size: 1.3rem;
    }

    .nav-button {
      padding: 6px 12px;
      font-size: 12px;
    }
  }

  @media (max-width: 480px) {
    .menu-bar nav {
      gap: 5px;
    }

    .nav-button {
      padding: 4px 8px;
      font-size: 11px;
    }

    .menu-bar h1 {
      font-size: 1.1rem;
    }
  }
  /* rotated mobile: squeeze things in */
  @media (max-height: 400px) {
    .menu-bar {
      height: 38px;
    }
    .main-content {
      padding: 5px;
    }
    .sidebar {
      width: calc(var(--sidebar-width) * 0.7);
    }
  }
</style>
